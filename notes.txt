Default Server:  dns1-ha.noc.nyu.edu
Address:  128.122.0.11

sudo apt-get update && sudo apt-get install -y \
    build-essential \
    uuid-dev \
    libgpgme-dev \
    squashfs-tools \
    libseccomp-dev \
    wget \
    pkg-config \
    git \
    cryptsetup-bin

go1.18.linux-amd64.tar.gz

export VERSION=1.18 OS=linux ARCH=amd64 && \
    wget https://dl.google.com/go/go$VERSION.$OS-$ARCH.tar.gz && \
    sudo tar -C /usr/local -xzvf go$VERSION.$OS-$ARCH.tar.gz && \
    rm go$VERSION.$OS-$ARCH.tar.gz
	
echo 'export GOPATH=${HOME}/go' >> ~/.bashrc && \
    echo 'export PATH=/usr/local/go/bin:${PATH}:${GOPATH}/bin' >> ~/.bashrc && \
    source ~/.bashrc
	
export VERSION=3.9.2 && # adjust this as necessary \
    wget https://github.com/sylabs/singularity/releases/download/v${VERSION}/singularity-ce-${VERSION}.tar.gz && \
    tar -xzf singularity-ce-${VERSION}.tar.gz && \
    cd singularity
	
./mconfig && \
    make -C ./builddir && \
    sudo make -C ./builddir install
	
nano ~/.bashrc

ADD

. /usr/local/etc/bash_completion.d/singularity

source ~/.bashrc

FILES NEEDED

	--overlay /scratch/aaj458/singularity_containers/openclip.ext3:ro \
	--overlay /vast/work/public/ml-datasets/conceptual-captions/cc_data.sqf:ro \
	--overlay /vast/work/public/ml-datasets/imagenet/imagenet-val.sqf:ro \
	/scratch/work/public/singularity/cuda11.2.2-cudnn8-devel-ubuntu20.04.sif 
	
pip install --editable=git+https://github.com/tmbdev/webdataset.git@c7b4a2a7cc7039c1dfc65754e576c4e9ac327270#egg=webdataset
pip install --editable=git+https://github.com/webdataset/webdataset.git@c7b4a2a7cc7039c1dfc65754e576c4e9ac327270#egg=webdataset

conda env create --file environment.yml python=3.10
conda activate open_clip
pip install torch==1.9.0+cu111 torchvision torchaudio -f https://download.pytorch.org/whl/cu111/torch_stable.html
python setup.py install
export PYTHONPATH="$PYTHONPATH:$PWD/src"
sudo mkdir /cc3m
sudo mount -o loop /path/to/cc_data.sqf /cc3m
cp /cc3m/cc_data/Train_GCC-training_output.csv ~
cp /cc3m/cc_data/Validation_GCC-1.1.0-Validation_output.csv ~
sed -i "s/\/cc_data\//\/cc3m\/cc_data\//g" "Train_GCC-training_output.csv"
sed -i "s/\/cc_data\//\/cc3m\/cc_data\//g" "Validation_GCC-1.1.0-Validation_output.csv"
cd open_clip

	
python -u src/training/main.py \
    --save-frequency 1 \
    --report-to tensorboard \
    --train-data="~/Train_GCC-training_output.csv"  \
    --val-data="~/Validation_GCC-1.1.0-Validation_output.csv"  \
    --csv-img-key filepath \
    --csv-caption-key title \
    --batch-size=128 \
    --lr=1e-3 \
    --wd=0.1 \
    --epochs=30 \
    --workers=8 \
    --model RN50
	
sudo umount /mnt/e/cc3m/cc_data.sqf
sudo mount -o loop /media/benfeuer/VSTETC/cc3m/cc_data.sqf /
sudo umount /media/benfeuer/VSTETC/cc3m/cc_data.sqf
conda install pytorch torchvision torchaudio cudatoolkit=11.3 -c pytorch
conda install wandb -c conda-forge
conda create -n open_clip --file environment.yml python=3.6
conda env create --file environment.yml python=3.6

/cc_data/train/1/1.jpg
/cc3m/cc_data/train/0/0.jpg

sed -i "s/\/cc_data\//\/cc3m\/cc_data\//g" "Train_GCC-training_output.csv"
